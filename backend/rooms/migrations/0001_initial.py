# Generated by Django 5.0.2 on 2025-02-26 02:52

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Library',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('location', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('opening_time', models.TimeField()),
                ('closing_time', models.TimeField()),
            ],
            options={
                'verbose_name_plural': 'Libraries',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Floor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField()),
                ('description', models.TextField(blank=True)),
                ('floor_map', models.JSONField(blank=True, help_text='JSON representation of the floor layout', null=True)),
                ('library', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='floors', to='rooms.library')),
            ],
            options={
                'ordering': ['library', 'number'],
                'unique_together': {('library', 'number')},
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_id', models.CharField(help_text="Unique room identifier (e.g., 'STR101')", max_length=20, unique=True)),
                ('capacity', models.IntegerField(help_text='Maximum number of people allowed')),
                ('has_whiteboard', models.BooleanField(default=False)),
                ('has_monitor', models.BooleanField(default=False)),
                ('has_window', models.BooleanField(default=False)),
                ('position_x', models.FloatField(blank=True, help_text='X coordinate on floor map', null=True)),
                ('position_y', models.FloatField(blank=True, help_text='Y coordinate on floor map', null=True)),
                ('width', models.FloatField(blank=True, help_text='Width on floor map', null=True)),
                ('height', models.FloatField(blank=True, help_text='Height on floor map', null=True)),
                ('status', models.CharField(choices=[('available', 'Available'), ('maintenance', 'Under Maintenance'), ('closed', 'Closed')], default='available', max_length=20)),
                ('floor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rooms', to='rooms.floor')),
            ],
            options={
                'ordering': ['room_id'],
            },
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('reservation_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('cancelled', 'Cancelled'), ('completed', 'Completed')], default='pending', max_length=20)),
                ('purpose', models.CharField(blank=True, help_text='Brief description of the reservation purpose', max_length=255)),
                ('num_attendees', models.IntegerField(default=1)),
                ('notes', models.TextField(blank=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservations', to=settings.AUTH_USER_MODEL)),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservations', to='rooms.room')),
            ],
            options={
                'ordering': ['-start_time'],
            },
        ),
        migrations.AddConstraint(
            model_name='reservation',
            constraint=models.CheckConstraint(check=models.Q(('end_time__gt', models.F('start_time'))), name='check_end_time_after_start_time'),
        ),
    ]
